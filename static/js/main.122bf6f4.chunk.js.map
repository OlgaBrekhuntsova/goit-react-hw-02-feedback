{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","Statistics","this","props","good","neutral","bad","total","positivePercentage","dataStatistics","Component","defaultProps","FeedbackOptions","options","onLeaveFeedback","HookFunc","label","bgC","bgCHover","useState","bg","setBg","styleB","background","handleHover","color","type","btn","style","onMouseEnter","onMouseLeave","data_content","onClick","buttonList","map","btnItem","Notification","message","notificationWarning","App","state","event","target","attributes","value","prevGood","setState","prevBad","prevNeutral","Math","round","toFixed","countTotalFeedback","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.122bf6f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataStatistics\":\"Statistics_dataStatistics__1pdQu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonList\":\"FeedbackOptions_buttonList__1vmh-\",\"btn\":\"FeedbackOptions_btn__2WqTf\",\"btnItem\":\"FeedbackOptions_btnItem__1z5Rj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3WhFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1mkET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationWarning\":\"Notification_notificationWarning__AX-q7\"};","// import React from \"react\";\r\n// import PropTypes from 'prop-types';\r\nimport styles from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => <div className={styles.container}> {children}</div>\r\nexport default Container;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import React, { Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nclass Statistics extends Component {\r\n     static defaultProps = {\r\n    total:0,\r\n    positivePercentage:\"No data\",\r\n};\r\n\r\nstatic propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number,\r\n  positivePercentage: PropTypes.string,\r\n  \r\n};\r\n    \r\n    render() {\r\n        const { good, neutral, bad, total, positivePercentage } = this.props;\r\n        \r\n      return (<ul>\r\n          <li>Good: <span className={styles.dataStatistics}>{good}</span></li>\r\n          <li>Neutral: <span className={styles.dataStatistics}>{neutral}</span></li>\r\n          <li>Bad: <span className={styles.dataStatistics}>{bad}</span></li>\r\n          <li>Total: <span className={styles.dataStatistics}>{total}</span></li>\r\n           <li>Positive feedback: <span className={styles.dataStatistics}>{positivePercentage}%</span></li>\r\n              </ul>) \r\n  }\r\n};\r\nexport default Statistics;","import React, { useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n// import classNames from 'classnames';\r\n  \r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    /*Хук для динамического стиля кнопки: бєкграунд при ховере*/\r\n        function  HookFunc({ label, bgC, bgCHover }) {\r\n                const [bg, setBg] = useState(bgC)\r\n        const styleB = { background: `${bg}`, };\r\n        const handleHover = color => {\r\n            setBg(color);\r\n        };\r\n        return (            \r\n            <button type=\"button\" className={styles.btn} style={styleB} onMouseEnter={() => handleHover(bgCHover)}\r\n            onMouseLeave={() => handleHover(bgC)} data_content={label} onClick={onLeaveFeedback}>{label}</button>  \r\n        )            \r\n};\r\n               return (\r\n                   <ul className={styles.buttonList}>\r\n                                 \r\n                       {(options.map(({ label, bgC, bgCHover }) => <li key={label} className={styles.btnItem}>   {HookFunc({ label, bgC, bgCHover })}</li> ))}\r\n                </ul >);\r\n          \r\n    \r\n        };\r\n FeedbackOptions.propTypes = {\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\noptions: PropTypes.arrayOf(PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n})).isRequired,\r\n    };\r\nexport default FeedbackOptions;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p className={ styles.notificationWarning}>{ message}</p>);\r\n};\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n};\r\nNotification.defaultProps = {\r\n    message: \"Something went wrong. Try to give feedback\",\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport buttonList from './components/FeedbackOptions/options.json';\nimport Notification from './components/Notification/Notification';\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onLeaveFeedback = event => {\n    switch (event.target.attributes.data_content.value) {\n      case 'Good':\n        const prevGood = this.state.good;\n        this.setState({ good: prevGood + 1 });\n        break;\n      case 'Bad':\n        const prevBad = this.state.bad;\n        this.setState({ bad: prevBad + 1 });\n        break;\n      default:\n        const prevNeutral = this.state.neutral;\n        this.setState({ neutral: prevNeutral + 1 });\n    }\n  };\n  countTotalFeedback() {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  }\n  countPositiveFeedbackPercentage() {\n    return (\n      Math.round(\n        (this.state.good /\n          (this.state.good + this.state.neutral + this.state.bad)) *\n          10000,\n      ) / 100\n    ).toFixed(2);\n  }\n  render() {\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={buttonList}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}